import React, { useEffect, useState } from "react";
import AppNavbar from "./AppNavbar";
import "./HistoryOrderDetailStyles.css";
import { useParams } from "react-router-dom"; // 引入 useParams

const id = localStorage.getItem("userId");

const HistoryOrderDetail = () => {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [address, setAddress] = useState(""); // 確保地址狀態被定義

  useEffect(() => {
    // 從後端 API 獲取訂單資料
    const fetchOrders = async () => {
      try {
        const response = await fetch("http://127.0.0.1:5000/history_orders", { // 確保使用正確的後端 URL
          method: "POST", // 使用 POST 請求
          headers: {
            "Content-Type": "application/json", // 確保傳送 JSON 格式
          },
          body: JSON.stringify({ userId: id }), // 將 userId 傳遞給後端
        });

        if (!response.ok) {
          console.error(`Error: ${response.status} - ${response.statusText}`);
          return;
        }

        const data = await response.json();
        console.log("API 1回傳資料:", data); // 印出接收到的資料
        setOrders(data);
      } catch (error) {
        console.error("Error fetching orders:", error);
      } finally {
        setLoading(false);
      }
    };

    const fetchAddress = async () => {
        try {
          const response = await fetch("http://127.0.0.1:5000/history_orders_detail", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ userId: id }),
          });
  
          if (!response.ok) {
            console.error(`Error: ${response.status} - ${response.statusText}`);
            return;
          }
  
          const data = await response.json();
          console.log("API 回傳資料:", data);
          setAddress(data.address);  // 設定地址狀態
        } catch (error) {
          console.error("Error fetching address:", error);
        } finally {
          setLoading(false);
        }
      };
  
        
        fetchOrders();
        fetchAddress();
  }, [id]);

  if (loading) {
    return <div className="loading">載入中...</div>;
  }

  return (
    <div className="HistoryOrderdetail-page">
      <AppNavbar />
      <div className="name-box-container">
        <p className="my-account">訂單紀錄  {'>'}  訂單詳情</p>
      </div>
      <div className="orders-container">
        {orders.length === 0 ? (
          <p className="no-orders">目前沒有過往訂單。</p>
        ) : (
          orders.map((order) => (
            <div key={order.orderID} className="order-box">
              <h1 className="storeName">{order.storeName}</h1>
              <h2 className="order">Order #{order.orderID}</h2>
              <h2 className="time">外送於: {order.time}</h2>
              <h2 className="money">${order.money}</h2>
              {order.storeImage && (
                <div className="store-image">
                  <img
                    src={order.storeImage}
                    alt={order.storeName}
                    className="store-img"
                    style={{ maxWidth: "150px", height: "auto" }}
                  />
                </div>
              )}
              <div className="meals-container">
                {order.meals.map((meal) => (
                  <div key={meal.mealID} className="meal-item">
                  </div>
                ))}
                <p>訂購於</p>
                <p>{order.storeName}</p>
                <p>外送到</p>
                <p>{address}</p>   
              </div>
            </div>
          ))
        )}
      </div>

      <div className="orders-detail">
            <p>訂單</p>
            {orders.length > 0 && orders.map((order) => (
                order.meals.map((meal) => (
                <div key={meal.mealID}>
                    <p>{meal.quantity}x {meal.mealName}</p>
                </div>
                ))
            ))}

            <div className="orders-container">
                {orders.length === 0 ? (
                <p className="no-orders">目前沒有過往訂單。</p>
                ) : (
                orders.map((order) => (
                    <div key={order.orderID} className="order-box">
                    <h1 className="storeName">{order.storeName}</h1>
                    <h2 className="order">Order #{order.orderID}</h2>
                    <h2 className="time">外送於: {order.time}</h2>
                    <h2 className="money">${order.money}</h2>
                    {order.storeImage && (
                        <div className="store-image">
                        <img
                            src={order.storeImage}
                            alt={order.storeName}
                            className="store-img"
                            style={{ maxWidth: "150px", height: "auto" }}
                        />
                        </div>
                    )}
                    <div className="meals-container">
                        {order.meals.map((meal) => (
                        <div key={meal.mealID} className="meal-item">
                            {/* 可以在這裡顯示餐點資訊 */}
                            <p>{meal.quantity}x {meal.mealName}</p>
                        </div>
                        ))}
                        <p>訂購於</p>
                        <p>{order.storeName}</p>
                        <p>外送到</p>
                        <p>{address}</p>
                    </div>
                    </div>
                ))
                )}
            </div>
            </div>




    </div>
  );
};

export default HistoryOrderDetail;
